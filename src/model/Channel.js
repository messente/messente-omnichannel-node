/**
 * Omnichannel API
 * Messente's API which allows sending messages via various channels with fallback options.
 *
 * OpenAPI spec version: 0.0.2
 * Contact: messente@messente.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 *
 * OpenAPI Generator version: 3.3.4
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'));
  } else {
    // Browser globals (root is window)
    if (!root.OmnichannelApi) {
      root.OmnichannelApi = {};
    }
    root.OmnichannelApi.Channel = factory(root.OmnichannelApi.ApiClient);
  }
}(this, function(ApiClient) {
  'use strict';


  /**
   * Enum class Channel.
   * @enum {}
   * @readonly
   */
  var exports = {
    /**
     * value: "sms"
     * @const
     */
    "sms": "sms",
    /**
     * value: "viber"
     * @const
     */
    "viber": "viber",
    /**
     * value: "whatsapp"
     * @const
     */
    "whatsapp": "whatsapp"  };

  /**
   * Returns a <code>Channel</code> enum value from a Javascript object name.
   * @param {Object} data The plain JavaScript object containing the name of the enum value.
   * @return {module:model/Channel} The enum <code>Channel</code> value.
   */
  exports.constructFromObject = function(object) {
    return object;
  }

  return exports;
}));


