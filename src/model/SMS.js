/**
 * Omnichannel API
 * This is the beta version of Omnichannel API
 *
 * OpenAPI spec version: 0.0.1
 * Contact: messente@messente.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 *
 * OpenAPI Generator version: 3.1.0-SNAPSHOT
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient', 'model/Message'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'), require('./Message'));
  } else {
    // Browser globals (root is window)
    if (!root.OmnichannelApi) {
      root.OmnichannelApi = {};
    }
    root.OmnichannelApi.SMS = factory(root.OmnichannelApi.ApiClient, root.OmnichannelApi.Message);
  }
}(this, function(ApiClient, Message) {
  'use strict';




  /**
   * The SMS model module.
   * @module model/SMS
   * @version 0.0.1
   */

  /**
   * Constructs a new <code>SMS</code>.
   * @alias module:model/SMS
   * @class
   * @extends module:model/Message
   * @implements module:model/Message
   * @param channel {} 
   * @param text {} Text content of the SMS
   */
  var exports = function(channel, text) {
    var _this = this;
    Message.call(_this, channel);
    Message.call(_this, channel);
    _this['text'] = text;
    _this['channel'] = "sms";


  };

  /**
   * Constructs a <code>SMS</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/SMS} obj Optional instance to populate.
   * @return {module:model/SMS} The populated <code>SMS</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();
      Message.constructFromObject(data, obj);
      Message.constructFromObject(data, obj);
      if (data.hasOwnProperty('text')) {
        obj['text'] = ApiClient.convertToType(data['text'], 'String');
      }
      if (data.hasOwnProperty('autoconvert')) {
        obj['autoconvert'] = ApiClient.convertToType(data['autoconvert'], 'Number');
      }
      if (data.hasOwnProperty('udh')) {
        obj['udh'] = ApiClient.convertToType(data['udh'], 'String');
      }
    }
    return obj;
  }

  exports.prototype = Object.create(Message.prototype);
  exports.prototype.constructor = exports;

  /**
   * Text content of the SMS
   * @member {String} text
   */
  exports.prototype['text'] = undefined;
  /**
   * Defines how non-GSM characters will be treated: - \"on\" Use replacement settings from the account's [API Auto Replace settings page](https://dashboard.messente.com/api-settings/auto-replace)(default) - \"full\" All non GSM 03.38 characters will be replaced with suitable alternatives - \"off\" Message content is not modified in any way 
   * @member {Number} autoconvert
   */
  exports.prototype['autoconvert'] = undefined;
  /**
   * hex-encoded string containing SMS UDH
   * @member {String} udh
   */
  exports.prototype['udh'] = undefined;

  // Implement Message interface:
  /**
   * @member {String} channel
   */
exports.prototype['channel'] = undefined;

  /**
   * Phone number or alphanumeric sender name
   * @member {String} sender
   */
exports.prototype['sender'] = undefined;

  /**
   * After how many minutes this channel is considered as failed and the next channel is attempted
   * @member {Number} validity
   */
exports.prototype['validity'] = undefined;



  return exports;
}));


