/**
 * Omnichannel API
 * Messente's API which allows sending messages via various channels with fallback options.
 *
 * OpenAPI spec version: 0.0.2
 * Contact: messente@messente.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 *
 * OpenAPI Generator version: 3.3.1
 *
 * Do not edit the class manually.
 *
 */

(function(factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient', 'model/Channel', 'model/DeliveryReportResponse', 'model/DeliveryResult', 'model/Err', 'model/ErrorItem', 'model/ErrorResponse', 'model/Message', 'model/MessageResult', 'model/OmniMessageCreateSuccessResponse', 'model/Omnimessage', 'model/ResponseErrorCode', 'model/ResponseErrorTitle', 'model/SMS', 'model/Status', 'model/Viber', 'model/WhatsApp', 'model/WhatsAppAudio', 'model/WhatsAppDocument', 'model/WhatsAppImage', 'model/WhatsAppText', 'omnichannel_api/DeliveryReportApi', 'omnichannel_api/OmnimessageApi'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('./ApiClient'), require('./model/Channel'), require('./model/DeliveryReportResponse'), require('./model/DeliveryResult'), require('./model/Err'), require('./model/ErrorItem'), require('./model/ErrorResponse'), require('./model/Message'), require('./model/MessageResult'), require('./model/OmniMessageCreateSuccessResponse'), require('./model/Omnimessage'), require('./model/ResponseErrorCode'), require('./model/ResponseErrorTitle'), require('./model/SMS'), require('./model/Status'), require('./model/Viber'), require('./model/WhatsApp'), require('./model/WhatsAppAudio'), require('./model/WhatsAppDocument'), require('./model/WhatsAppImage'), require('./model/WhatsAppText'), require('./omnichannel_api/DeliveryReportApi'), require('./omnichannel_api/OmnimessageApi'));
  }
}(function(ApiClient, Channel, DeliveryReportResponse, DeliveryResult, Err, ErrorItem, ErrorResponse, Message, MessageResult, OmniMessageCreateSuccessResponse, Omnimessage, ResponseErrorCode, ResponseErrorTitle, SMS, Status, Viber, WhatsApp, WhatsAppAudio, WhatsAppDocument, WhatsAppImage, WhatsAppText, DeliveryReportApi, OmnimessageApi) {
  'use strict';

  /**
   * Messentes_API_which_allows_sending_messages_via_various_channels_with_fallback_options_.<br>
   * The <code>index</code> module provides access to constructors for all the classes which comprise the public API.
   * <p>
   * An AMD (recommended!) or CommonJS application will generally do something equivalent to the following:
   * <pre>
   * var OmnichannelApi = require('index'); // See note below*.
   * var xxxSvc = new OmnichannelApi.XxxApi(); // Allocate the API class we're going to use.
   * var yyyModel = new OmnichannelApi.Yyy(); // Construct a model instance.
   * yyyModel.someProperty = 'someValue';
   * ...
   * var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
   * ...
   * </pre>
   * <em>*NOTE: For a top-level AMD script, use require(['index'], function(){...})
   * and put the application logic within the callback function.</em>
   * </p>
   * <p>
   * A non-AMD browser application (discouraged) might do something like this:
   * <pre>
   * var xxxSvc = new OmnichannelApi.XxxApi(); // Allocate the API class we're going to use.
   * var yyy = new OmnichannelApi.Yyy(); // Construct a model instance.
   * yyyModel.someProperty = 'someValue';
   * ...
   * var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
   * ...
   * </pre>
   * </p>
   * @module index
   * @version 0.0.2
   */
  var exports = {
    /**
     * The ApiClient constructor.
     * @property {module:ApiClient}
     */
    ApiClient: ApiClient,
    /**
     * The Channel model constructor.
     * @property {module:model/Channel}
     */
    Channel: Channel,
    /**
     * The DeliveryReportResponse model constructor.
     * @property {module:model/DeliveryReportResponse}
     */
    DeliveryReportResponse: DeliveryReportResponse,
    /**
     * The DeliveryResult model constructor.
     * @property {module:model/DeliveryResult}
     */
    DeliveryResult: DeliveryResult,
    /**
     * The Err model constructor.
     * @property {module:model/Err}
     */
    Err: Err,
    /**
     * The ErrorItem model constructor.
     * @property {module:model/ErrorItem}
     */
    ErrorItem: ErrorItem,
    /**
     * The ErrorResponse model constructor.
     * @property {module:model/ErrorResponse}
     */
    ErrorResponse: ErrorResponse,
    /**
     * The Message model constructor.
     * @property {module:model/Message}
     */
    Message: Message,
    /**
     * The MessageResult model constructor.
     * @property {module:model/MessageResult}
     */
    MessageResult: MessageResult,
    /**
     * The OmniMessageCreateSuccessResponse model constructor.
     * @property {module:model/OmniMessageCreateSuccessResponse}
     */
    OmniMessageCreateSuccessResponse: OmniMessageCreateSuccessResponse,
    /**
     * The Omnimessage model constructor.
     * @property {module:model/Omnimessage}
     */
    Omnimessage: Omnimessage,
    /**
     * The ResponseErrorCode model constructor.
     * @property {module:model/ResponseErrorCode}
     */
    ResponseErrorCode: ResponseErrorCode,
    /**
     * The ResponseErrorTitle model constructor.
     * @property {module:model/ResponseErrorTitle}
     */
    ResponseErrorTitle: ResponseErrorTitle,
    /**
     * The SMS model constructor.
     * @property {module:model/SMS}
     */
    SMS: SMS,
    /**
     * The Status model constructor.
     * @property {module:model/Status}
     */
    Status: Status,
    /**
     * The Viber model constructor.
     * @property {module:model/Viber}
     */
    Viber: Viber,
    /**
     * The WhatsApp model constructor.
     * @property {module:model/WhatsApp}
     */
    WhatsApp: WhatsApp,
    /**
     * The WhatsAppAudio model constructor.
     * @property {module:model/WhatsAppAudio}
     */
    WhatsAppAudio: WhatsAppAudio,
    /**
     * The WhatsAppDocument model constructor.
     * @property {module:model/WhatsAppDocument}
     */
    WhatsAppDocument: WhatsAppDocument,
    /**
     * The WhatsAppImage model constructor.
     * @property {module:model/WhatsAppImage}
     */
    WhatsAppImage: WhatsAppImage,
    /**
     * The WhatsAppText model constructor.
     * @property {module:model/WhatsAppText}
     */
    WhatsAppText: WhatsAppText,
    /**
     * The DeliveryReportApi service constructor.
     * @property {module:omnichannel_api/DeliveryReportApi}
     */
    DeliveryReportApi: DeliveryReportApi,
    /**
     * The OmnimessageApi service constructor.
     * @property {module:omnichannel_api/OmnimessageApi}
     */
    OmnimessageApi: OmnimessageApi
  };

  return exports;
}));
